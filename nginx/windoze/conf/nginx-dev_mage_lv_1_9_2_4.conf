# bincani.lurv.com.au
server {
    listen       127.0.0.1:80;
    charset      utf-8;
    server_name  bincani.lurv.com.au;

    root c:/projects/factoryx/lurv;

    # check if Load Balancer handled SSL
    set $elb_https "off";
    if ($http_x_forwarded_proto = "https") {
        set $elb_https "on";
    }

    location / {
        index index.html index.php;
        try_files $uri $uri/ @handler;
        expires 30d; ## Assume all files are cachable
    }

    ## These locations would be hidden by .htaccess normally
    location /app/                { deny all; }
    location /includes/           { deny all; }
    location /lib/                { deny all; }
    location /media/downloadable/ { deny all; }
    location /pkginfo/            { deny all; }
    location /report/config.xml   { deny all; }
    location /var/                { deny all; }
    location /downloader/         { deny all; }
    location /errors/                      { deny all; }
    location /shell/                 { deny all; }

    # temporary while the switch from admin to factoryx
    #location /admin {
    #  rewrite ^.* http://ah-admin-staging.factoryx.io/factoryx permanent;
    #}

    location  /. { ## Disable .htaccess and other hidden files
        return 404;
    }

    location @handler { ## Magento uses a common front handler
        rewrite / /index.php;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 1y;
        log_not_found off;
    }

    location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler
        #rewrite ^(.*.php)/admin.* http://ah-admin-staging.factoryx.io/factoryx permanent;
        rewrite ^(.*.php)/ $1 last;
    }

    location ~ .php$ {
        if (!-e $request_filename) { rewrite / /index.php last; }
        
        expires        off;
        fastcgi_pass   127.0.0.1:9123;
        fastcgi_param  HTTPS $elb_https;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param  MAGE_RUN_CODE default;
        fastcgi_param  MAGE_RUN_TYPE store;
        include        fastcgi_params; ## See /etc/nginx/fastcgi_params
    }
}